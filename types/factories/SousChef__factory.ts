/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SousChef } from "../SousChef";

export class SousChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _syrup: string,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<SousChef> {
    return super.deploy(
      _syrup,
      _rewardPerBlock,
      _startBlock,
      _endBlock,
      overrides || {}
    ) as Promise<SousChef>;
  }
  getDeployTransaction(
    _syrup: string,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _syrup,
      _rewardPerBlock,
      _startBlock,
      _endBlock,
      overrides || {}
    );
  }
  attach(address: string): SousChef {
    return super.attach(address) as SousChef;
  }
  connect(signer: Signer): SousChef__factory {
    return super.connect(signer) as SousChef__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SousChef {
    return new Contract(address, _abi, signerOrProvider) as SousChef;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBEP20",
        name: "_syrup",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "addressLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addressList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "syrup",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516117653803806117658339818101604052608081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826001819055508160068190555080600781905550604051806040016040528060065481526020016000815250600260008201518160000155602082015181600101559050505050505061166a806100fb6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638ae39cac1161008c578063db2e21bc11610066578063db2e21bc146102a1578063dc881888146102ab578063e3161ddd146102c9578063f40f0f52146102d3576100cf565b80638ae39cac146101fd578063b6b55f251461021b578063b810fb4314610249576100cf565b80631959a002146100d45780631aed65531461013a5780632e1a7d4d1461015857806348cd4cb1146101865780635a2f3d09146101a457806386a952c4146101c9575b600080fd5b610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032b565b60405180848152602001838152602001828152602001935050505060405180910390f35b610142610355565b6040518082815260200191505060405180910390f35b6101846004803603602081101561016e57600080fd5b810190808035906020019092919050505061035b565b005b61018e6105f4565b6040518082815260200191505060405180910390f35b6101ac6105fa565b604051808381526020018281526020019250505060405180910390f35b6101d161060c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610205610630565b6040518082815260200191505060405180910390f35b6102476004803603602081101561023157600080fd5b8101908080359060200190929190505050610636565b005b6102756004803603602081101561025f57600080fd5b81019080803590602001909291905050506108e8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a9610924565b005b6102b3610a29565b6040518082815260200191505060405180910390f35b6102d1610a36565b005b610315600480360360208110156102e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bad565b6040518082815260200191505060405180910390f35b60046020528060005260406000206000915090508060000154908060010154908060020154905083565b60075481565b600081116103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000154101561048e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f77697468647261773a206e6f7420656e6f75676800000000000000000000000081525060200191505060405180910390fd5b610496610a36565b6104e1338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610db19092919063ffffffff16565b6105408160020154610532836001015461052464e8d4a510006105166002600101548860000154610e5390919063ffffffff16565b610ed990919063ffffffff16565b610f2390919063ffffffff16565b610f6d90919063ffffffff16565b816002018190555061055f828260000154610f2390919063ffffffff16565b816000018190555061059a64e8d4a5100061058c6002600101548460000154610e5390919063ffffffff16565b610ed990919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040518082815260200191505060405180910390a25050565b60065481565b60028060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600081116106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506106f7610a36565b61074433308460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ff5909392919063ffffffff16565b6000816000015414801561075c575060008160020154145b801561076c575060008160010154145b156107d5576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6108348160020154610826836001015461081864e8d4a5100061080a6002600101548860000154610e5390919063ffffffff16565b610ed990919063ffffffff16565b610f2390919063ffffffff16565b610f6d90919063ffffffff16565b8160020181905550610853828260000154610f6d90919063ffffffff16565b816000018190555061088e64e8d4a510006108806002600101548460000154610e5390919063ffffffff16565b610ed990919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c836040518082815260200191505060405180910390a25050565b600581815481106108f557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506109b633826000015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610db19092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969582600001546040518082815260200191505060405180910390a260008160000181905550600081600101819055506000816002018190555050565b6000600580549050905090565b6002600001544311610a4757610bab565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ad157600080fd5b505afa158015610ae5573d6000803e3d6000fd5b505050506040513d6020811015610afb57600080fd5b810190808051906020019092919050505090506000811415610b27574360026000018190555050610bab565b6000610b38600260000154436110b6565b90506000610b5160015483610e5390919063ffffffff16565b9050610b94610b8084610b7264e8d4a5100085610e5390919063ffffffff16565b610ed990919063ffffffff16565b600260010154610f6d90919063ffffffff16565b600260010181905550436002600001819055505050505b565b600080600290506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260010154905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c8a57600080fd5b505afa158015610c9e573d6000803e3d6000fd5b505050506040513d6020811015610cb457600080fd5b81019080805190602001909291905050509050836000015443118015610cdb575060008114155b15610d4c576000610cf08560000154436110b6565b90506000610d0960015483610e5390919063ffffffff16565b9050610d47610d3884610d2a64e8d4a5100085610e5390919063ffffffff16565b610ed990919063ffffffff16565b85610f6d90919063ffffffff16565b935050505b610da68360020154610d988560010154610d8a64e8d4a51000610d7c888a60000154610e5390919063ffffffff16565b610ed990919063ffffffff16565b610f2390919063ffffffff16565b610f6d90919063ffffffff16565b945050505050919050565b610e4e8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061110b565b505050565b600080831415610e665760009050610ed3565b6000828402905082848281610e7757fe5b0414610ece576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806116146021913960400191505060405180910390fd5b809150505b92915050565b6000610f1b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111fa565b905092915050565b6000610f6583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112c0565b905092915050565b600080828401905083811015610feb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6110b0846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061110b565b50505050565b600060075482116110db576110d48383610f2390919063ffffffff16565b9050611105565b60075483106110ed5760009050611105565b61110283600754610f2390919063ffffffff16565b90505b92915050565b606061116d826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113809092919063ffffffff16565b90506000815111156111f55780806020019051602081101561118e57600080fd5b81019080805190602001909291905050506111f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806115ea602a913960400191505060405180910390fd5b5b505050565b600080831182906112a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561126b578082015181840152602081019050611250565b50505050905090810190601f1680156112985780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816112b257fe5b049050809150509392505050565b600083831115829061136d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611332578082015181840152602081019050611317565b50505050905090810190601f16801561135f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b606061138f8484600085611398565b90509392505050565b60606113a38561159e565b611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106114655780518252602082019150602081019050602083039250611442565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114c7576040519150601f19603f3d011682016040523d82523d6000602084013e6114cc565b606091505b509150915081156114e1578092505050611596565b6000815111156114f45780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561155b578082015181840152602081019050611540565b50505050905090810190601f1680156115885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156115e057506000801b8214155b9250505091905056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212204298d60cdb885a25d270bf3e68c53d251a975f3965573b8d4a49772827455bad64736f6c634300060c0033";
